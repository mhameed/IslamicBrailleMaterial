
Translator from ASCII to index everest braille output, based on the VB
code of Mesar Hameed

Owen Cliffe (c) 2005, Licensed under the GNU general public
license. (see attached file COPYING.txt)

Generates 6 or 8 dot output for the Index Braille Everest braille
printer from ascii input using a translation file.


*Setting up the printer*

In order for this to work the printer must have a braille table loaded
which contains 8 dot symbols, there are several translation tools
included in the printer drivers. 

To load a different braille table do: 

0) Make sure the printer is connected to the PC (via USB or Parllel) 
1) Open the "Index Embosser Utility" (included when the printer
drivers are installed)
2) Select "File->New" from the menu
3) Click the Add button 
4) You should be shown a file dialog which contains some directories,
   open the "table" directory
5) select the file "English Grade 0-8 Dots" and press open
6) then select "Upgrade Embosser"
7) Select the embosser (probably the default) from the left menu
8) Select the option relevant to the firmware version of the embosser
   (probably "Firmware in embosser higher or equal to 10.30") in the
   right drop down
9) Press "Ok"

The tool will then generate a print job which will be sent to the
printer (you can check the progress of this using the normal windows
print monitor.  When this is complete, the printer should re-start.

10) To use the new braille table navigate through the setup->braille
    menu on the printer and select the "Own 1" table as the braille table. 

*Building the translator* 

The tools are written in (i think) ansi C and have been tested on
linux , to build them type "make" the tools "translate" and
"displaybraille" will be built in the "src" directory.


*Using the translator* 

To send output to a parallel port (connected to lp0) printer in linux:

First make sure you have permissions to write to the parallel port
device ("/dev/lp0") (i.e. as root do "chown a+w /dev/lp0")

Invoke the tanslator as follows: 

./translate translation_table.tbl < input_file.txt > /dev/lp0

where translation_table.tbl is the location of a translation table
file you want to 

*Translation files* 

The translation file describes a mapping from one ascii character to
one (6 or 8 dot) braille cell
the format of each line is: 

<A>,1,[<Cells>] 

where <A> is a single ascii character and <Cells> is a sequence of
numbers or spaces of describing which dots should be embossed i.e:

c,1,[1  4    ]

indicates that for the character lower case 'c' the dots 1 and 4
should be embossed.


The translation file uses conventional numbering for dots: 
1 4 
2 5
3 6
7 8



*Programming the printer, notes*

Output is generated by putting the printer into "transparent mode" in
this mode cells can be sent directly to the printer without it doing
any translation. In this mode the printer uses a different dot
ordering to standard braille notation for 8 dot braille: for byte of
bits 12345678 the corresponding printer  dots are: 
1 5 
2 6
3 7 
4 8


The translator includes functions for translating between standard
braille ordering and the above ordering. 

The embosser treats *both* carriage return (ascii 10) and line feed
(ascii 13) as newline characters, so only one should be used in the
input text (i.e. unix newline convention). 


*debugging* 

Included is a debugging tool called displaybraille, this is capable of
generating unicode (UTF8) braille output which may be displayed as
braille cells on a unicode compatible terminal (i.e. uxterm in linux)
this tool attempts to emulate a subset (i.e. transparent mode) of the
embosser as much as possible.
